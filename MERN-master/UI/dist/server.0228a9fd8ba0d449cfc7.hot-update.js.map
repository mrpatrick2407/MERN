{"version":3,"file":"server.0228a9fd8ba0d449cfc7.hot-update.js","mappings":"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","sources":["webpack://por-mern0stack2-api/./src/IssueReport.jsx","webpack://por-mern0stack2-api/webpack/runtime/getFullHash"],"sourcesContent":["import React from 'react';\r\nimport { Card, Table } from 'react-bootstrap';\r\nimport IssueFilter from './IssueFilter.jsx';\r\nimport URLSearchParams from 'url-search-params';\r\nimport { graphqlendpoint } from './graphqlendppoint.js';\r\nexport default class IssueReport extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={stats:''}\r\n        this.loaddata=this.loaddata.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        this.loaddata();\r\n    }\r\n   \r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.location.search!==this.props.location.search){\r\n            this.loaddata();\r\n        }\r\n    }\r\n    \r\n    async loaddata(){\r\n        \r\n        const {location:{search}}=this.props;\r\n        const params=new URLSearchParams(search);\r\n        const vars={}\r\n        if(params.get('status')){\r\n            vars.status=params.get('status')\r\n        }\r\n        if(params.get('effortmin')){vars.effortmin=parseInt(params.get('effortmin'))}\r\n        if(params.get('effortmax')){vars.effortmax=parseInt(params.get('effortmax'))}\r\n        const query=`query IssueCount( $status: statustype, $effortmin: Int, $effortmax: Int) {\r\n            issueCount( status: $status, effortmin: $effortmin, effortmax: $effortmax) {\r\n              Assigned\r\n              Closed\r\n              Fixed\r\n              New\r\n              owner\r\n            }\r\n          }`;\r\n\r\n          const data=await graphqlendpoint(query,vars);\r\n          console.log(data);\r\n          if(data){\r\n            \r\n            this.setState({stats:data.issueCount});\r\n          }\r\n          else{\r\n            this.setState({stats:''});\r\n          }\r\n          \r\n    \r\n    }\r\n    \r\n    render(){\r\n        const statuses=[\"New\",\"Assigned\",\"Fixed\",\"Closed\"]\r\n        const {stats}=this.state;\r\n        \r\n        const headercolumns=(\r\n            statuses.map(status=>{<th key={status}>{status}</th>})\r\n        )\r\n        let statRows;\r\n        if(stats){\r\n         statRows = stats.map((counts) => (\r\n            <tr key={counts.owner}>\r\n              <td>{counts.owner}</td>\r\n              {statuses.map((status) => (\r\n                <td key={status}>{counts[status]}</td>\r\n              ))}\r\n            </tr>\r\n          ));\r\n              }\r\n              else{\r\n                 statRows=null\r\n              }\r\n        return(\r\n            <>\r\n             <Card >\r\n                    <Card.Title>Filter</Card.Title>\r\n                    <Card.Body >\r\n                <IssueFilter urlbase=\"/report\"/>\r\n                    </Card.Body>\r\n             </Card>\r\n                <Table striped bordered hover responsive=\"sm\">\r\n                    <thead>\r\n                        {headercolumns}\r\n                        \r\n                    </thead>\r\n                    <tbody>\r\n                        {statRows}\r\n                    </tbody>\r\n                </Table>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n","__webpack_require__.h = () => (\"5b767e3085e1da9bec43\")"],"names":["React","Card","Table","IssueFilter","URLSearchParams","graphqlendpoint","IssueReport","Component","constructor","props","state","stats","loaddata","bind","componentDidMount","componentDidUpdate","prevProps","location","search","params","vars","get","status","effortmin","parseInt","effortmax","query","data","console","log","setState","issueCount","render","statuses","headercolumns","map","createElement","key","statRows","counts","owner","Fragment","Title","Body","urlbase","striped","bordered","hover","responsive"],"sourceRoot":""}