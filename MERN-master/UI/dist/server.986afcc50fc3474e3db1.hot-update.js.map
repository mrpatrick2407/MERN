{"version":3,"file":"server.986afcc50fc3474e3db1.hot-update.js","mappings":"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","sources":["webpack://por-mern0stack2-api/./src/IssueList.jsx","webpack://por-mern0stack2-api/webpack/runtime/getFullHash"],"sourcesContent":["\r\nimport IssueFilter from './IssueFilter.jsx';\r\nimport IssueTable from './IssueTable.jsx';\r\nimport URLSearchParams from 'url-search-params';\r\nimport React from 'react';\r\nimport { NavLink, Route, Switch } from 'react-router-dom';\r\nimport IssueDetails from './IssueDetail.jsx'\r\nimport {graphqlendpoint} from './graphqlendppoint.js'\r\nimport {FormLabel, Nav, NavItem, Navbar} from'react-bootstrap'\r\nimport {Card} from 'react-bootstrap'\r\nimport Toast from './Toast.jsx';\r\nimport IssueAdd from './IssueAdd.jsx';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport withToast from './withToast.jsx';\r\n\r\nconst SECTION_SIZE=5;\r\n\r\nfunction PageLink({page,params,activePage,children}){\r\n    alert(\"page \"+page)\r\n    alert(\"activePage \"+activePage)\r\n    params.set('page',page);\r\n    if (page === 0) return React.cloneElement(children, { disabled: true })\r\n    return <NavLink active={page === activePage} to={`?${params.toString()}`}>{children}</NavLink>\r\n}\r\n\r\n     class IssueList extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={issues:[],pages:null}\r\n        this.createissue=this.createissue.bind(this);\r\n        this.closeIssue=this.closeIssue.bind(this);\r\n        this.deleteissue=this.deleteissue.bind(this);\r\n        \r\n    }\r\n    componentDidMount(){\r\n        this.loadData()\r\n    }   \r\n    componentDidUpdate(prevProps){\r\n        const {location:{search:prevSearch}}=prevProps;\r\n        const {location:{search}}=this.props;\r\n        if(prevSearch!=search){\r\n            this.loadData()\r\n        }\r\n    }\r\n    pagelink(){\r\n\r\n    }\r\n\r\n    async loadData(){\r\n        const {location:{search}}=this.props;\r\n        const params=new URLSearchParams(search);\r\n        const vars={}\r\n        if(params.get('status')){\r\n            vars.status=params.get('status')\r\n        }\r\n        if(params.get('page')) vars.page=parseInt(params.get('page'))\r\n        if(params.get('effortmin')){vars.effortmin=parseInt(params.get('effortmin'))}\r\n        if(params.get('effortmax')){vars.effortmax=parseInt(params.get('effortmax'))}\r\n        const query=`query Issues($page: Int, $status: statustype, $effortmin: Int, $effortmax: Int) {\r\n            issueList(page: $page, status: $status, effortmin: $effortmin, effortmax: $effortmax) {\r\n              issuesDb {\r\n                id\r\n                owner\r\n                title\r\n                status\r\n                created\r\n                description\r\n                due\r\n                effort\r\n              }\r\n              pages\r\n            }\r\n          }`;\r\n    \r\n\r\n    const data =await graphqlendpoint(query,vars,this.props.showerror);\r\n    if(data){\r\n        this.props.showsuccess(\"Issues loaded\")\r\n        this.setState({issues:data.issueList.issuesDb,pages:data.issueList.pages})\r\n        \r\n    }\r\n    }\r\n\r\n    async closeIssue(index){\r\n        const issues=this.state.issues;\r\n        console.log(index);\r\n        const mutation =`mutation IssueUpdate($id: Int!) {\r\n            issueUpdate(id: $id, Changes: {status:Closed}) {\r\n              id title status owner effort created due description  \r\n              }\r\n            }`;\r\n       const data =await graphqlendpoint(mutation,{id:issues[index].id});\r\n       if(data){\r\n        this.setState((prevState)=>{\r\n            const newState =[...prevState.issues];\r\n            newState[index] = data.issueUpdate;\r\n            return {issues: newState};\r\n        })\r\n       }else{\r\n        \r\n        this.loadData();\r\n\r\n       }\r\n    }\r\n\r\n    async deleteissue(index){\r\n        console.log(\"delete issue\")\r\n        console.log(index);\r\n        const mutation=`mutation IssueDelete($id: Int!) {\r\n            issueDelete(id: $id)\r\n          }`\r\n          const {location:{pathname,search},history}=this.props;\r\n          console.log(pathname+search)\r\n          const {issues}=this.state;\r\n          const {id}=issues[index];\r\n          const data= await graphqlendpoint(mutation,{id});\r\n          if(data){\r\n            this.setState((prevState)=>{\r\n                const newlist=[...prevState.issues];\r\n\r\n                if(pathname==`/issues`){\r\n                    history.push({pathname:`/issues`,search:search})\r\n                }\r\n                newlist.splice(index, 1);\r\n                console.log(newlist)\r\n\r\n                return {issues:newlist};\r\n            });\r\n            \r\n          }\r\n    }\r\n\r\n    async createissue(issue){\r\n        \r\n        const query=`query issueAdd($issue:Issueinput!) {\r\n            issueAdd(issue:$issue) {\r\n            id\r\n            }\r\n        }`;\r\n\r\n        const data =await graphqlendpoint(query,{issue},this.props.showerror);\r\n        if(data){\r\n\r\n            this.props.showsuccess(\"Created successfully\")\r\n            this.loadData();\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        const { match } = this.props;\r\n        const pages=this.state.pages;\r\n        const {location:{search}}=this.props;\r\n        const params=new URLSearchParams(search);\r\n        const page=params.get('page')?parseInt(params.get('page')):1;\r\n        let items=[];\r\n        let prevSection=0;\r\n        let nextSection=6;\r\n\r\n        if(pages){\r\n      \r\n        const startPage=((page-1)/SECTION_SIZE)*SECTION_SIZE+1;//startpage will always be multiple of SECTION_SIZE\r\n        alert(\"startPage \"+startPage)\r\n        const endPage=Math.min(startPage+SECTION_SIZE-1,pages);\r\n         prevSection=startPage==1?0:startPage-SECTION_SIZE;\r\n         nextSection=endPage>=pages?0:startPage+SECTION_SIZE;\r\n       \r\n        for(let i=startPage;i<=endPage;i++){\r\n            items.push(<PageLink key={i} page={i} params={params} activePage={page}>\r\n                <Pagination.Item>{i}</Pagination.Item>\r\n            </PageLink>)\r\n        }\r\n    }\r\n    \r\n        return (\r\n            <React.Fragment>\r\n                <Navbar bg='light'>\r\n                \r\n                <IssueAdd  createIssue={this.createissue}/>\r\n               \r\n                </Navbar>\r\n                <Card >\r\n                    <Card.Title>Filter</Card.Title>\r\n                    <Card.Body >\r\n                <IssueFilter urlbase=\"/issues\"/>\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n                \r\n                <Card >\r\n                    \r\n                    <Card.Body >\r\n                         <IssueTable deleteissue={this.deleteissue} closeIssue={this.closeIssue}  issues={this.state.issues}/>\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n                         \r\n                <Switch>\r\n              <Route path={`/issues/:id`} component={IssueDetails} />\r\n                </Switch>\r\n                {pages && \r\n                <Pagination>\r\n                    <PageLink page={prevSection} params={params} activePage={page}>\r\n                        <Pagination.Item>{'<'}\r\n                        </Pagination.Item>\r\n                        </PageLink>\r\n                        {items}\r\n                        <PageLink page={nextSection} params={params} activePage={page}>\r\n                        <Pagination.Item>{'>'}</Pagination.Item>\r\n                        </PageLink>\r\n                </Pagination>\r\n    }\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withToast(IssueList);","__webpack_require__.h = () => (\"7e9b04ff9ed1bb4edbee\")"],"names":["IssueFilter","IssueTable","URLSearchParams","React","NavLink","Route","Switch","IssueDetails","graphqlendpoint","FormLabel","Nav","NavItem","Navbar","Card","Toast","IssueAdd","Pagination","withToast","SECTION_SIZE","PageLink","page","params","activePage","children","alert","set","cloneElement","disabled","createElement","active","to","toString","IssueList","Component","constructor","state","issues","pages","createissue","bind","closeIssue","deleteissue","componentDidMount","loadData","componentDidUpdate","prevProps","location","search","prevSearch","props","pagelink","vars","get","status","parseInt","effortmin","effortmax","query","data","showerror","showsuccess","setState","issueList","issuesDb","index","console","log","mutation","id","prevState","newState","issueUpdate","pathname","history","newlist","push","splice","issue","render","match","items","prevSection","nextSection","startPage","endPage","Math","min","i","key","Item","Fragment","bg","createIssue","Title","Body","urlbase","path","component"],"sourceRoot":""}