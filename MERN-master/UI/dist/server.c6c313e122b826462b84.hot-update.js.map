{"version":3,"file":"server.c6c313e122b826462b84.hot-update.js","mappings":"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","sources":["webpack://por-mern0stack2-api/./src/IssueList.jsx","webpack://por-mern0stack2-api/webpack/runtime/getFullHash"],"sourcesContent":["import IssueFilter from './IssueFilter.jsx';\r\nimport IssueTable from './IssueTable.jsx';\r\nimport URLSearchParams from 'url-search-params';\r\nimport React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport IssueDetails from './IssueDetail.jsx'\r\nimport {graphqlendpoint} from './graphqlendppoint.js'\r\nimport {FormLabel, Nav, NavItem, Navbar} from'react-bootstrap'\r\nimport {Card} from 'react-bootstrap'\r\nimport Toast from './Toast.jsx';\r\nimport IssueAdd from './IssueAdd.jsx';\r\n\r\nimport withToast from './withToast.jsx';\r\n\r\n     class IssueList extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={issues:[]}\r\n        this.createissue=this.createissue.bind(this);\r\n        this.closeIssue=this.closeIssue.bind(this);\r\n        this.deleteissue=this.deleteissue.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        this.loadData()\r\n    }   \r\n    componentDidUpdate(prevProps){\r\n        const {location:{search:prevSearch}}=prevProps;\r\n        const {location:{search}}=this.props;\r\n        if(prevSearch!=search){\r\n            this.loadData()\r\n        }\r\n    }\r\n    \r\n\r\n    async loadData(){\r\n        const {location:{search}}=this.props;\r\n        const params=new URLSearchParams(search);\r\n        const vars={}\r\n        if(params.get('status')){\r\n            vars.status=params.get('status')\r\n        }\r\n        if(params.get('effortmin')){vars.effortmin=parseInt(params.get('effortmin'))}\r\n        if(params.get('effortmax')){vars.effortmax=parseInt(params.get('effortmax'))}\r\n        const query=`query($status: statustype,$effortmin:Int,$effortmax:Int){\r\n            issueList(status: $status,effortmax:$effortmax,effortmin:$effortmin) {\r\n            title\r\n              _id\r\n              status\r\n              owner\r\n              id\r\n              effort\r\n              due\r\n              created\r\n            }\r\n          }`;\r\n    \r\n\r\n    const data =await graphqlendpoint(query,vars,this.props.showerror);\r\n    if(data){\r\n        this.props.showsuccess(\"Issues loaded\")\r\n        this.setState({issues:data.issueList})\r\n    }\r\n    }\r\n\r\n    async closeIssue(index){\r\n        const issues=this.state.issues;\r\n        console.log(index);\r\n        const mutation =`mutation IssueUpdate($id: Int!) {\r\n            issueUpdate(id: $id, Changes: {status:Closed}) {\r\n              id title status owner effort created due description  \r\n              }\r\n            }`;\r\n       const data =await graphqlendpoint(mutation,{id:issues[index].id});\r\n       if(data){\r\n        this.setState((prevState)=>{\r\n            const newState =[...prevState.issues];\r\n            newState[index] = data.issueUpdate;\r\n            return {issues: newState};\r\n        })\r\n       }else{\r\n        \r\n        this.loadData();\r\n\r\n       }\r\n    }\r\n\r\n    async deleteissue(index){\r\n        console.log(\"delete issue\")\r\n        console.log(index);\r\n        const mutation=`mutation IssueDelete($id: Int!) {\r\n            issueDelete(id: $id)\r\n          }`\r\n          const {location:{pathname,search},history}=this.props;\r\n          console.log(pathname+search)\r\n          const {issues}=this.state;\r\n          const {id}=issues[index];\r\n          const data= await graphqlendpoint(mutation,{id});\r\n          if(data){\r\n            this.setState((prevState)=>{\r\n                const newlist=[...prevState.issues];\r\n\r\n                if(pathname==`/issues`){\r\n                    history.push({pathname:`/issues`,search:search})\r\n                }\r\n                newlist.splice(index, 1);\r\n                console.log(newlist)\r\n\r\n                return {issues:newlist};\r\n            });\r\n            \r\n          }\r\n    }\r\n\r\n    async createissue(issue){\r\n        \r\n        const query=`query issueAdd($issue:Issueinput!) {\r\n            issueAdd(issue:$issue) {\r\n            id\r\n            }\r\n        }`;\r\n\r\n        const data =await graphqlendpoint(query,{issue},this.props.showerror);\r\n        if(data){\r\n\r\n            this.props.showsuccess(\"Created successfully\")\r\n            this.loadData();\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        const { match } = this.props;\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <Navbar bg='light'>\r\n                \r\n                <IssueAdd  createIssue={this.createissue}/>\r\n               \r\n                </Navbar>\r\n                <Card >\r\n                    <Card.Title>Filter</Card.Title>\r\n                    <Card.Body >\r\n                <IssueFilter/>\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n                \r\n                <Card >\r\n                    \r\n                    <Card.Body >\r\n                         <IssueTable deleteissue={this.deleteissue} closeIssue={this.closeIssue}  issues={this.state.issues}/>\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n                         \r\n                <Switch>\r\n              <Route path={`/issues/:id`} component={IssueDetails} />\r\n                </Switch>\r\n            \r\n                \r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withToast(IssueList);","__webpack_require__.h = () => (\"9b1e9a0bd598a7424a12\")"],"names":["IssueFilter","IssueTable","URLSearchParams","React","Route","Switch","IssueDetails","graphqlendpoint","FormLabel","Nav","NavItem","Navbar","Card","Toast","IssueAdd","withToast","IssueList","Component","constructor","state","issues","createissue","bind","closeIssue","deleteissue","componentDidMount","loadData","componentDidUpdate","prevProps","location","search","prevSearch","props","params","vars","get","status","effortmin","parseInt","effortmax","query","data","showerror","showsuccess","setState","issueList","index","console","log","mutation","id","prevState","newState","issueUpdate","pathname","history","newlist","push","splice","issue","render","match","createElement","Fragment","bg","createIssue","Title","Body","path","component"],"sourceRoot":""}